name: Daily GPT Update # Or "Daily Gemini Update" if using Gemini

on:
  schedule:
    # Runs every day at 8 AM CST (13:00 UTC)
    # Cron schedule for 13:00 UTC (8 AM CST)
    - cron: '0 13 * * *'
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permission to push changes

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 # Use the latest version of checkout action

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Use the latest version of setup-node
        with:
          node-version: '18' # Ensure this matches your project's Node.js version

      - name: Install dependencies
        # This assumes you have a package.json file in your repo
        run: npm install

      - name: Run update script
        run: node update.js
        env:
          # IMPORTANT: If using Gemini, this should be GEMINI_API_KEY
          # and your Node.js script should use the @google/generative-ai SDK.
          # If using OpenAI, keep OPENAI_API_KEY.
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Commit and push changes # This step was mis-indented!
        run: |
          git config user.name "github-actions[bot]" # Use the built-in bot user
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add any files that your update.js script might have changed or created
          # For example, if update.js writes to 'daily_report.html':
          # git add daily_report.html
          git add . # Adds all changed/new files

          # Commit only if there are changes
          git commit -m "Automated: Update daily report" || echo "No changes to commit"

          # Use the built-in GITHUB_TOKEN for pushing, it's more secure.
          # The 'contents: write' permission is crucial for this to work.
          git push





