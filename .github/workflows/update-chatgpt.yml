name: Daily GPT Update # Name of your workflow

on:
  schedule:
    # This cron expression means "at 13:00 UTC every day".
    # 13:00 UTC is 8:00 AM CST/CDT (Racine, Wisconsin timezone).
    - cron: '0 13 * * *'
  workflow_dispatch: # Allows you to manually run the workflow from the GitHub Actions tab

jobs:
  update:
    runs-on: ubuntu-latest # The type of runner to use for the job
    permissions:
      contents: write # CRITICAL: This grants the workflow the necessary permissions to push commits to your repository.

    steps:
      - name: Checkout repository code # Step 1: Get your repository's code onto the runner
        uses: actions/checkout@v4 # Recommended to use the latest stable version of the checkout action

      - name: Set up Node.js environment # Step 2: Prepare the Node.js environment
        uses: actions/setup-node@v4 # Recommended to use the latest stable version of the Node.js setup action
        with:
          node-version: '18' # Specify the Node.js version your update.js script needs

      - name: Install Node.js dependencies # Step 3: Install packages like 'openai' and 'dotenv'
        # This command will look for a package.json file in your repo's root
        run: npm install

      - name: Run update script to generate content # Step 4: Execute your script
        # This script calls the OpenAI API and writes the result to historical-news.html
        run: node update.js
        env:
          # Passes the OPENAI_API_KEY from your GitHub Secrets to the Node.js script's environment
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Configure Git for automated push # Step 5: Set up Git user for the commit
        run: |
          # Use the special 'github-actions[bot]' user for automated commits
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "Automated: Update ChatGPT daily report" || true

          echo "--- Pre-pull/rebase Debug Info ---"
          echo "Local branch status before pull:"
          git status
          echo "Last 3 local commits before pull:"
          git log -3 --pretty=oneline
          echo "Remote master/main history before pull (fetch from origin):"
          git fetch origin
          git log origin/master -3 --pretty=oneline # Or origin/main
          echo "--- Performing pull/rebase ---"

          git pull --rebase origin master # Or 'main'

          echo "--- Post-pull/rebase Debug Info ---"
          echo "Local branch status after pull/rebase:"
          git status
          echo "Last 3 local commits after pull/rebase:"
          git log -3 --pretty=oneline
          echo "Comparison with remote (should be clean if rebase worked):"
          git diff origin/master # Or origin/main

          echo "--- Attempting push ---"
          git push